{"version":3,"file":"static/js/390.2390ba24.chunk.js","mappings":"qPAaA,EAXuB,SAAC,GAAqC,IAAnCA,EAAkC,EAAlCA,GAAIC,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,OAC7C,OACE,2BACE,gBAAKC,IAAK,mCAAqCD,EAAQE,IAAKJ,KAC5D,wBAAKA,KACL,uBAAIC,KACJ,SAAC,EAAAI,KAAD,CAAMC,GAAE,kBAAaP,GAArB,0BAGL,ECOD,EAhBmB,SAAC,GAAgB,IAAdQ,EAAa,EAAbA,OACpB,OACE,wBACGA,EAAOC,KAAI,gBAAGT,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,SAAUC,EAAxB,EAAwBA,OAAxB,OACV,SAAC,EAAD,CAEEH,GAAIA,EACJC,MAAOA,EACPC,SAAUA,EACVC,OAAQA,GAJHH,EAFG,KAWjB,E,SCXYU,E,OAAMC,EAAAA,OAAa,CAC9BC,QAJO,+BAKPC,OAAQ,CACNC,QALY,sCASHC,EAAc,mCAAG,oGACLL,EAAIM,IAAJ,uBADK,cACtBC,EADsB,yBAErBA,EAASC,KAAKC,QAAQV,KAAI,kBAA2C,CAC1ET,GAD+B,EAAGA,GAElCC,MAF+B,EAAOA,MAGtCC,SAH+B,EAAcA,SAI7CC,OAJ+B,EAAwBiB,YAAxB,KAFL,2CAAH,qDCgB3B,EAvBa,WACX,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOb,EAAP,KAAec,EAAf,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,oGAEjBF,GAAa,GAFI,SAGQT,IAHR,OAGXY,EAHW,OAIjBC,QAAQC,IAAIF,GACZL,EAAUK,GALO,gDAOjBC,QAAQC,IAAR,MAPiB,yBASjBL,GAAa,GATI,4EAAH,qDAYlBE,GACD,GAAE,KAEI,8BAAGH,GAAY,SAACO,EAAA,EAAD,KAAa,SAAC,EAAD,CAAYtB,OAAQA,KACxD,C","sources":["components/MoviesListItem/MoviesListItem.jsx","components/MoviesList/MoviesList.jsx","services/Api.jsx","pages/Home/Home.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\n\nconst MoviesListItem = ({ id, title, overview, poster }) => {\n  return (\n    <li>\n      <img src={'https://image.tmdb.org/t/p/w154/' + poster} alt={title} />\n      <h4>{title}</h4>\n      <p>{overview}</p>\n      <Link to={`/movies/${id}`}>Details >></Link>\n    </li>\n  );\n};\n\nexport default MoviesListItem;\n","import MoviesListItem from 'components/MoviesListItem/MoviesListItem';\n\nconst MoviesList = ({ movies }) => {\n  return (\n    <ul>\n      {movies.map(({ id, title, overview, poster }) => (\n        <MoviesListItem\n          key={id}\n          id={id}\n          title={title}\n          overview={overview}\n          poster={poster}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default MoviesList;\n","import axios from 'axios';\n\nconst URL = `https://api.themoviedb.org/3`;\nconst API_KEY = 'e0b2738922ecba49fdf80e5e8d9f9891';\n\nexport const api = axios.create({\n  baseURL: URL,\n  params: {\n    api_key: API_KEY,\n  },\n});\n\nexport const getTrendMovies = async () => {\n  const response = await api.get(`/trending/movie/day`);\n  return response.data.results.map(({ id, title, overview, poster_path }) => ({\n    id,\n    title,\n    overview,\n    poster: poster_path,\n  }));\n};\n\nexport const getMoviesByName = query => {\n  const response = api.get(`/search/movie?query=${query}`);\n  return response;\n};\n\nexport const getMoviesDetails = movie_id => {\n  const response = api.get(`/movie/${movie_id}?`);\n  return response;\n};\n\nexport const getCast = movie_id => {\n  const response = api.get(`/movie/${movie_id}/credits?`);\n  return response;\n};\n\nexport const getReviews = movie_id => {\n  const response = api.get(`/movie/${movie_id}/reviews?`);\n  return response;\n};\n","import Loader from 'components/Loader/Loader';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport { useEffect, useState } from 'react';\nimport { getTrendMovies } from 'services/Api';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const loadTrending = async () => {\n      try {\n        setIsLoading(true);\n        const moviesList = await getTrendMovies();\n        console.log(moviesList);\n        setMovies(moviesList);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    loadTrending();\n  }, []);\n\n  return <>{isLoading ? <Loader /> : <MoviesList movies={movies} />}</>;\n};\n\nexport default Home;\n"],"names":["id","title","overview","poster","src","alt","Link","to","movies","map","api","axios","baseURL","params","api_key","getTrendMovies","get","response","data","results","poster_path","useState","setMovies","isLoading","setIsLoading","useEffect","loadTrending","moviesList","console","log","Loader"],"sourceRoot":""}