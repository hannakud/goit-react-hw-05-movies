{"version":3,"file":"static/js/544.a001427f.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/MoviesListItem/MoviesListItem.module.css?7daa","components/MoviesListItem/MoviesListItem.jsx","webpack://react-homework-template/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.jsx","pages/Home/Home.jsx","services/Api.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"MoviesListItem\":\"MoviesListItem_MoviesListItem__vYwX6\",\"poster\":\"MoviesListItem_poster__DTRMw\",\"text\":\"MoviesListItem_text__0V9SN\",\"LinkWrapper\":\"MoviesListItem_LinkWrapper__j4pCn\"};","import { Link, useLocation } from 'react-router-dom';\nimport css from './MoviesListItem.module.css';\nimport PropTypes from 'prop-types';\n\nconst MoviesListItem = ({ id, title, overview, poster }) => {\n  const location = useLocation();\n  return (\n    <li className={css.MoviesListItem}>\n      <img className={css.poster} src={poster} alt={title} />\n      <h4>{title}</h4>\n      <p className={css.text}>{overview}</p>\n      <div className={css.LinkWrapper}>\n        <Link to={`/movies/${id}`} state={{ from: location }}>\n          Show details\n        </Link>\n      </div>\n    </li>\n  );\n};\n\nMoviesListItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  overview: PropTypes.string.isRequired,\n  poster: PropTypes.string.isRequired,\n};\n\nexport default MoviesListItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"MoviesList\":\"MoviesList_MoviesList__jqSLr\"};","import MoviesListItem from 'components/MoviesListItem/MoviesListItem';\nimport css from './MoviesList.module.css';\nimport PropTypes from 'prop-types';\n\nconst MoviesList = ({ movies }) => {\n  return (\n    <ul className={css.MoviesList}>\n      {movies.map(({ id, title, overview, poster }) => (\n        <MoviesListItem\n          key={id}\n          id={id}\n          title={title}\n          overview={overview}\n          poster={poster}\n        />\n      ))}\n    </ul>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      overview: PropTypes.string.isRequired,\n      poster: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n\nexport default MoviesList;\n","import Loader from 'components/Loader/Loader';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport { useEffect, useState } from 'react';\nimport { getTrendMovies } from 'services/Api';\nimport { toast } from 'react-toastify';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const loadTrending = async () => {\n      try {\n        setIsLoading(true);\n        const moviesList = await getTrendMovies();\n        setMovies(moviesList);\n      } catch (error) {\n        toast.error(' Sorry, there is mistake in server');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    loadTrending();\n  }, []);\n\n  return <>{isLoading ? <Loader /> : <MoviesList movies={movies} />}</>;\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst URL = `https://api.themoviedb.org/3`;\nconst API_KEY = 'e0b2738922ecba49fdf80e5e8d9f9891';\n\nexport const api = axios.create({\n  baseURL: URL,\n  params: {\n    api_key: API_KEY,\n  },\n});\n\nconst POSTER_BASE_URL_W154 = 'https://image.tmdb.org/t/p/w154/';\nconst POSTER_BASE_URL_W300 = 'https://image.tmdb.org/t/p/w300/';\nconst NO_PHOTO =\n  'https://westsiderc.org/wp-content/uploads/2019/08/Image-Not-Available.png';\n\nexport const getTrendMovies = async () => {\n  const response = await api.get(`/trending/movie/day`);\n  return response.data.results.map(({ id, title, overview, poster_path }) => ({\n    id,\n    title,\n    overview,\n    poster: poster_path ? POSTER_BASE_URL_W154 + poster_path : '',\n  }));\n};\n\nexport const getMoviesByName = async query => {\n  const response = await api.get(`/search/movie?query=${query}`);\n  return response.data.results.map(({ id, title, overview, poster_path }) => ({\n    id,\n    title,\n    overview,\n    poster: poster_path ? POSTER_BASE_URL_W154 + poster_path : NO_PHOTO,\n  }));\n};\n\nexport const getMoviesDetails = async movieId => {\n  const response = await api.get(`/movie/${movieId}?`);\n  const {\n    id,\n    genres,\n    title,\n    release_date,\n    overview,\n    poster_path,\n    vote_average,\n  } = response.data;\n\n  const releaseDate = new Date(release_date);\n  const releaseYear = isNaN(releaseDate)\n    ? 'Unknown'\n    : releaseDate.getFullYear();\n\n  return {\n    id,\n    title,\n    releaseYear,\n    overview,\n    poster: poster_path ? POSTER_BASE_URL_W300 + poster_path : NO_PHOTO,\n    genres: genres.map(({ name }) => name),\n    rating: vote_average,\n  };\n};\n\nexport const getCast = async movieid => {\n  const response = await api.get(`/movie/${movieid}/credits?`);\n\n  return response.data.cast.map(({ id, name, character, profile_path }) => ({\n    id,\n    character,\n    profile: profile_path ? POSTER_BASE_URL_W154 + profile_path : NO_PHOTO,\n    name,\n  }));\n};\n\nexport const getReviews = async movieid => {\n  const response = await api.get(`/movie/${movieid}/reviews?`);\n  return response.data.results.map(({ id, content, author }) => ({\n    id,\n    content,\n    author,\n  }));\n};\n"],"names":["id","title","overview","poster","location","useLocation","className","css","src","alt","Link","to","state","from","movies","map","useState","setMovies","isLoading","setIsLoading","useEffect","loadTrending","getTrendMovies","moviesList","toast","api","axios","baseURL","params","api_key","POSTER_BASE_URL_W154","NO_PHOTO","get","response","data","results","poster_path","getMoviesByName","query","getMoviesDetails","movieId","genres","release_date","vote_average","releaseDate","Date","releaseYear","isNaN","getFullYear","name","rating","getCast","movieid","cast","character","profile_path","profile","getReviews","content","author"],"sourceRoot":""}