{"version":3,"file":"static/js/597.9b4297b4.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/MovieCard/MovieCard.module.css?a4e5","components/MovieCard/MovieCard.jsx","webpack://react-homework-template/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.jsx","services/Api.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"MovieCard_wrapper__UNKq4\",\"poster\":\"MovieCard_poster__B9RSd\"};","import css from './MovieCard.module.css';\nimport PropTypes from 'prop-types';\n\nconst MovieCard = ({\n  title,\n  releaseYear,\n  overview,\n  poster,\n  genres,\n  rating,\n}) => {\n  return (\n    <div className={css.wrapper}>\n      <img className={css.poster} src={poster} alt={title} />\n      <div>\n        <h2>\n          {title} ({releaseYear})\n        </h2>\n        <div>User score: {(rating * 10).toFixed(0)}%</div>\n        <h4>Overview</h4>\n        <p>{overview}</p>\n        {genres.length && (\n          <div>\n            <h4>Genres</h4>\n            <p>{genres.join('  ')}</p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  releaseYear: PropTypes.number.isRequired,\n  overview: PropTypes.string.isRequired,\n  poster: PropTypes.string.isRequired,\n  genres: PropTypes.arrayOf(PropTypes.string).isRequired,\n  rating: PropTypes.number.isRequired,\n};\nexport default MovieCard;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MovieDetails_list__dbNMP\"};","import Loader from 'components/Loader/Loader';\nimport MovieCard from 'components/MovieCard/MovieCard';\nimport { Suspense, useEffect, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { getMoviesDetails } from 'services/Api';\nimport css from './MovieDetails.module.css';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [isLoading, setIsLoading] = useState(false);\n  const [movie, setMovie] = useState(false);\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    const loadTrending = async () => {\n      try {\n        setIsLoading(true);\n        const movieDetails = await getMoviesDetails(movieId);\n        setMovie(movieDetails);\n      } catch (error) {\n        toast.error(' Sorry, there is mistake in server');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    loadTrending();\n  }, [movieId]);\n\n  const { title, releaseYear, overview, poster, genres, rating } = movie;\n\n  return (\n    <div>\n      <Link to={backLinkHref}>GO BACK</Link>\n      {movie && (\n        <MovieCard\n          title={title}\n          releaseYear={releaseYear}\n          poster={poster}\n          genres={genres}\n          overview={overview}\n          rating={rating}\n        />\n      )}\n\n      <ul className={css.list}>\n        <li>\n          <Link to=\"cast\">Cast</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\">Reviews</Link>\n        </li>\n      </ul>\n      <Suspense fallback={isLoading && <Loader />}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst URL = `https://api.themoviedb.org/3`;\nconst API_KEY = 'e0b2738922ecba49fdf80e5e8d9f9891';\n\nexport const api = axios.create({\n  baseURL: URL,\n  params: {\n    api_key: API_KEY,\n  },\n});\n\nconst POSTER_BASE_URL_W154 = 'https://image.tmdb.org/t/p/w154/';\nconst POSTER_BASE_URL_W300 = 'https://image.tmdb.org/t/p/w300/';\nconst NO_PHOTO =\n  'https://westsiderc.org/wp-content/uploads/2019/08/Image-Not-Available.png';\n\nexport const getTrendMovies = async () => {\n  const response = await api.get(`/trending/movie/day`);\n  return response.data.results.map(({ id, title, overview, poster_path }) => ({\n    id,\n    title,\n    overview,\n    poster: poster_path ? POSTER_BASE_URL_W154 + poster_path : '',\n  }));\n};\n\nexport const getMoviesByName = async query => {\n  const response = await api.get(`/search/movie?query=${query}`);\n  return response.data.results.map(({ id, title, overview, poster_path }) => ({\n    id,\n    title,\n    overview,\n    poster: poster_path ? POSTER_BASE_URL_W154 + poster_path : NO_PHOTO,\n  }));\n};\n\nexport const getMoviesDetails = async movieId => {\n  const response = await api.get(`/movie/${movieId}?`);\n  const {\n    id,\n    genres,\n    title,\n    release_date,\n    overview,\n    poster_path,\n    vote_average,\n  } = response.data;\n\n  const releaseDate = new Date(release_date);\n  const releaseYear = isNaN(releaseDate)\n    ? 'Unknown'\n    : releaseDate.getFullYear();\n\n  return {\n    id,\n    title,\n    releaseYear,\n    overview,\n    poster: poster_path ? POSTER_BASE_URL_W300 + poster_path : NO_PHOTO,\n    genres: genres.map(({ name }) => name),\n    rating: vote_average,\n  };\n};\n\nexport const getCast = async movieid => {\n  const response = await api.get(`/movie/${movieid}/credits?`);\n\n  return response.data.cast.map(({ id, name, character, profile_path }) => ({\n    id,\n    character,\n    profile: profile_path ? POSTER_BASE_URL_W154 + profile_path : NO_PHOTO,\n    name,\n  }));\n};\n\nexport const getReviews = async movieid => {\n  const response = await api.get(`/movie/${movieid}/reviews?`);\n  return response.data.results.map(({ id, content, author }) => ({\n    id,\n    content,\n    author,\n  }));\n};\n"],"names":["title","releaseYear","overview","poster","genres","rating","className","css","src","alt","toFixed","length","join","movieId","useParams","useState","isLoading","setIsLoading","movie","setMovie","backLinkHref","useLocation","state","from","useEffect","loadTrending","getMoviesDetails","movieDetails","toast","Link","to","Suspense","fallback","Loader","api","axios","baseURL","params","api_key","POSTER_BASE_URL_W154","NO_PHOTO","getTrendMovies","get","response","data","results","map","id","poster_path","getMoviesByName","query","release_date","vote_average","releaseDate","Date","isNaN","getFullYear","name","getCast","movieid","cast","character","profile_path","profile","getReviews","content","author"],"sourceRoot":""}